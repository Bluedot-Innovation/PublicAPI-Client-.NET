using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Net;
using System.IO;
using System.Threading.Tasks;

/**
 * @author Bluedot Innovation
 * Update Action with conditions REST client shows updating an action with conditions to an existing zone using .net http web api libray
 * All conditions attached to an Action can be updated by providing the id. id has to be provided for update calls if the id is not provided then a new condition will be created
 */
namespace BluedotPublicApiClient.actionclient
{
    public class UpdateConditions
    {
        private static String bdCustomerApiKey    = "a6598740-75f5-11e4-86ca-a0481cdc3311"; //This key is generated by Bluedot Access UI when you register
        private static String bdApplicationApiKey = "5a9b1b78-3dd7-4f4d-8608-82408f3baf4c"; //This apiKey is generated when you create an application
        private static String bdRestUrl           = "https://api.bluedotinnovation.com/1/actions";
        private static String bdZoneId            = "b80e50eb-b9f9-4ed5-966e-4b2e39cc0549"; //This is the id of the zone being updated. This can be fetched by calling zones/getAll API
        private static String bdDateRangeConditionId = "";
        private static String bdPercentageCrossedConditionId = "";
        private static String bdTimeActiveConditionId = "";

        public void addActionWithConditions()
        {
            postToService(getJsonVibrationActionWithConditions());
        }


        private void postToService(String json)
        {
            HttpClient httpRestClient = new HttpClient();
            httpRestClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            HttpContent jsonContent = new StringContent(json);
            jsonContent.Headers.ContentType = new MediaTypeHeaderValue("application/json");

            HttpResponseMessage serverResponse = httpRestClient.PostAsync(new Uri(bdRestUrl), jsonContent).Result;
            if (serverResponse.IsSuccessStatusCode)
            {
                var result = serverResponse.Content.ReadAsStringAsync().Result;

                Console.WriteLine("{0}", result);
            }
            else
            {
                Console.WriteLine("{0} ({1})", (int)serverResponse.StatusCode, serverResponse.Content.ReadAsStringAsync().Result);
            }
        }

        private static String getJsonVibrationActionWithConditions()
        {
            String vibrationActionWithCondtionsJson =
                 "{" +
                    "\"security\": {" +
                        "\"apiKey\":" + "\"" + bdApplicationApiKey + "\"," +
                        "\"customerApiKey\":" + "\"" + bdCustomerApiKey + "\"" +
                    "}," +
                    "\"content\": {" +
                        "\"zone\": {" +
                            "\"zoneId\":" + "\"" + bdZoneId + "\"," +
                            "\"actions\": {" +
                            "\"vibrationActions\": [" +
                                "{" +
                                "\"name\": \"A vibration action\"" +
                                    "\"conditions\": {" +
                                        "\"percentageCrossed\":" +
                                            "[" +
                                                "{" +
                                                   "\"conditionId\":" + "\"" + bdPercentageCrossedConditionId+ "\"," +
                                                    "\"percentage\": 50," +
                                                    "\"timeoutPeriod\": \"00:05\"" +
                                                "}" +
                                            "]," +
                                        "\"dateRange\": [" +
                                            "{" +
                                                "\"conditionId\":" + "\"" + bdDateRangeConditionId + "\"," +
                                                "\"start\": \"01/03/2014\"," +
                                                "\"end\": \"14/12/2014\"" +
                                            "}" +
                                        "]," +
                                        "\"timeActive\": [{" +
                                            "\"conditionId\":" + "\"" + bdTimeActiveConditionId + "\"," +
                                            "\"from\": {" +
                                                "\"time\": \"06:01\"," +
                                                "\"period\": \"am\" " +
                                            "}," +
                                            "\"to\": {" +
                                                "\"time\": \"11:00\"," +
                                                "\"period\": \"pm\" " +
                                            "}" +
                                        "}]" +
                                    "}" +
                                "}" +
                            "]" +
                          "}" +
                        "}" +
                    "}" +
                "}";
            return vibrationActionWithCondtionsJson;
        }

    }
}
