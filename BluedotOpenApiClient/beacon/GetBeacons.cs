using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Net;
using System.IO;
using System.Threading.Tasks;
using System.Web.Script.Serialization;

namespace BluedotPublicApiClient.beacon
{
    class GetBeacons
    {
        private static String bdApplicationApiKey = "45f087e0-245c-11e4-a968-bc305bf60831"; //This apiKey is generated when you create an application
        private static String bdCustomerApiKey    = "86577370-7b91-11e4-bcb7-a0481cdc3311"; //This key is generated by Bluedot Access UI when you register
        private static String beaconId            = "977444dc-968a-4b13-84d8-4b194b794c18";
        String bdRestUrl                          = "http://localhost:3033/1/beacons?customerApiKey=" + bdCustomerApiKey +  "&beaconId=" + beaconId;

        public void getBeacons()
        {
            HttpClient httpRestClient = new HttpClient();

            HttpResponseMessage serverResponse = httpRestClient.GetAsync(new Uri(bdRestUrl)).Result;
            if (serverResponse.IsSuccessStatusCode)
            {
                var result = serverResponse.Content.ReadAsStringAsync().Result;

                JavaScriptSerializer serializer = new JavaScriptSerializer();
                dynamic beacons = serializer.Deserialize(result, typeof(object)); // Result is an array of json
                foreach (var beacon in beacons)
                {
                    Console.WriteLine("_id : {0} ", beacon["_id"]);
                    Console.WriteLine("name : {0} ", beacon["name"]);
                    Console.WriteLine("proximityUuid : {0} ", beacon["proximityUuid"]);
                    Console.WriteLine("---------\n");
                }
            }
            else
            {
                Console.WriteLine("{0} ({1})", (int)serverResponse.StatusCode, serverResponse.Content.ReadAsStringAsync().Result);
            }

        }
    }
}
